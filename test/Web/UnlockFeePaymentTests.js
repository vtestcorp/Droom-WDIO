const Base = require('../../BaseClass/base')
const UnlockFeePayment = require('../../Pages/Web/UnlockFeePaymentPage')
const LoginWithPasswordPage = require('../../Pages/Web/LoginViaPasswordPage')
describe("Unlock Fee Payment", () => {
  it("TC_01 Verify The Tokan Amount For Car Is 999", async () => {
        await Base.webProdLogin()
        await (await UnlockFeePayment.buy).click()
        await (await UnlockFeePayment.carCategory).click()
        await (await UnlockFeePayment.addnewRequirement).click()
        await UnlockFeePayment.SelectCarCondition()
        await UnlockFeePayment.selectCurrentLocation()
        await UnlockFeePayment.enterYourVehicleDetails()
        await UnlockFeePayment.selectCar()
        await UnlockFeePayment.basicDetailsDisplay()
        await UnlockFeePayment.lastStepforcomplete()
        await (await UnlockFeePayment.heading).waitForDisplayed()
        await (await UnlockFeePayment.submit).click()
        await (await UnlockFeePayment.viewMatch).click()
        await (await UnlockFeePayment.bestMatches).click()
        expect(await UnlockFeePayment.carpayButton).toBeDisplayed()
        console.log(await (await UnlockFeePayment.carpayButton).getText())
        console.log("Application shows Best Match Unlock Fee(999) for car")
        await LoginWithPasswordPage.logout()
    });

    it("TC_02 Verify The Tokan Amount For Bike Is 499", async () => {
        await Base.webProdLogin()
        await (await UnlockFeePayment.buy).click()
        await (await UnlockFeePayment.bikeCategory).click()
        await (await UnlockFeePayment.addnewRequirement).click()
        await UnlockFeePayment.SelectBikeCondition()
        await UnlockFeePayment.selectCurrentLocation()
        await UnlockFeePayment.enterYourVehicleDetails()
        await UnlockFeePayment.selectBike()
        await (await UnlockFeePayment.submit).click()
        console.log("clicked on Submit")
        await browser.pause('2000')
        await (await UnlockFeePayment.viewMatch).click()
        console.log("clicked on View all Matches")
        await (await UnlockFeePayment.bestMatches).click()
        expect(await UnlockFeePayment.bikepayButton).toBeDisplayed()
        console.log(await (await UnlockFeePayment.bikepayButton).getText())
        console.log("Application shows Best Match Unlock Fee(499) for Bike")
        await LoginWithPasswordPage.logout()
    });

    it("TC_04 Verify Proceed To Checkout Option Is Display For Bike", async () => {
        await Base.webProdLogin()
        await (await UnlockFeePayment.buy).click()
        await (await UnlockFeePayment.bikeCategory).click()
        await (await UnlockFeePayment.addnewRequirement).click()
        await UnlockFeePayment.SelectBikeCondition()
        await UnlockFeePayment.selectCurrentLocationForMatch()
        await UnlockFeePayment.enterYourVehicleDetails()
        await UnlockFeePayment.selectBike()
        await (await UnlockFeePayment.submit).click()
        console.log("clicked on Submit")
        await browser.pause('2000')
        await (await UnlockFeePayment.viewMatch).click()
        console.log("clicked on View all Matches")
        await browser.pause('2000')
        console.log("clicked on match ")
        await browser.newWindow('https://droom.in/product/bajaj-pulsar-150cc-2008-61b09ef4fc506c28348b458f?r_id=61d418e02b037348088b4659')
        console.log("switch to another window")
        await (await UnlockFeePayment.bookNowButton).waitForDisplayed({ timeout: 5000 })
        expect(await UnlockFeePayment.bookNowButton).toBeDisplayed()
        console.log(await (await UnlockFeePayment.bookNowButton).isClickable())
        console.log("Application shows Book Now")
        await (await UnlockFeePayment.bookNowButton).click()
        console.log("Application shows Congratulations Item has been successfully added to the cart")
        expect(await UnlockFeePayment.proceedTocheckout).toBeDisplayed()
        console.log("Application shows Proceed To Checkout Option is display for bike")
    });

    it("TC_06 Verify The Functionality After Click On Proceed To Checkout Button For Bike", async () => {
        expect(await UnlockFeePayment.proceedTocheckout).toBeDisplayed()
        console.log('Proceed To Checkout button displayed after clicked on Book now button')
        await (await UnlockFeePayment.proceedTocheckout).click()
        console.log("User clicked on proceed to checkout button")
        expect(await UnlockFeePayment.addressTab).toBeDisplayed()
       console.log("After click on proceed to checkout button address tab displayed")
        expect(await UnlockFeePayment.paymentTab).toBeDisplayed()
        console.log("After click on proceed to checkout button payment tab displayed")
        expect(await UnlockFeePayment.reviewPayTab).toBeDisplayed()
        console.log("After click on proceed to checkout button review & pay tab displayed")
        await (await UnlockFeePayment.logo).click()
        await LoginWithPasswordPage.logout()

    });

    it("TC_03 Verify Proceed To Checkout Option Is Display For Car", async () => {
        await Base.webProdLogin()
        await (await UnlockFeePayment.buy).click()
        await (await UnlockFeePayment.carCategory).click()
        await (await UnlockFeePayment.addnewRequirement).click()
        await UnlockFeePayment.SelectCarCondition()
        await UnlockFeePayment.selectCurrentLocationForMatch()
        await UnlockFeePayment.enterYourVehicleDetails()
        await UnlockFeePayment.selectCarForBestMatch()
        await UnlockFeePayment.basicDetailsDisplay()
        await UnlockFeePayment.lastStepforcomplete()
        await (await UnlockFeePayment.submit).click()
        console.log("clicked on Submit")
        await browser.pause('2000')
        await (await UnlockFeePayment.viewMatch).click()
        console.log("clicked on View all Matches")
        await browser.pause('2000')
        console.log("clicked on match ")
        await browser.newWindow('https://droom.in/product/honda-city-15-s-mt-2011-61bdb1c91471795b088b45d9?r_id=61d2ea2b97eb585b128b46b7')
        //await browser.switchWindow('https://droom.in/product/honda-city-15-s-mt-2011-61bdb1c91471795b088b45d9?r_id=61d2ea2b97eb585b128b46b7')
        console.log("switch to another window")
        await (await UnlockFeePayment.bookNowButton).waitForDisplayed({ timeout: 5000 })
        expect(await UnlockFeePayment.bookNowButton).toBeDisplayed()
        console.log(await (await UnlockFeePayment.bookNowButton).isClickable())
        console.log("Application shows Book Now")
        await (await UnlockFeePayment.bookNowButton).click()
        console.log("Application shows Congratulations Item has been successfully added to the cart")
        expect(await UnlockFeePayment.proceedTocheckout).toBeDisplayed()
        console.log("Application shows Proceed To Checkout Option is display for car")

    });

   it("TC_05 Verify The Functionality After Click On Proceed To Checkout Button For Car", async () => {
       expect(await UnlockFeePayment.proceedTocheckout).toBeDisplayed()
         console.log('Proceed To Checkout button displayed after clicked on Book now button')
        await (await UnlockFeePayment.proceedTocheckout).click()
        console.log("User clicked on proceed to checkout button")
        expect(await UnlockFeePayment.addressTab).toBeDisplayed()
       console.log("After click on proceed to checkout button address tab displayed")
        expect(await UnlockFeePayment.paymentTab).toBeDisplayed()
        console.log("After click on proceed to checkout button payment tab displayed")
        expect(await UnlockFeePayment.reviewPayTab).toBeDisplayed()
        console.log("After click on proceed to checkout button review & pay tab displayed")
    });

  /*  it("TC_07 Verify Account Tab After Click On Payment", async () => {
        expect(await UnlockFeePayment.name).toBeDisplayed()
        console.log(await (await UnlockFeePayment.name).getText())
        expect(await UnlockFeePayment.email).toBeDisplayed()
        console.log(await (await UnlockFeePayment.email).getText())
        expect(await UnlockFeePayment.continueToAddress).toBeDisplayed()
        console.log(await (await UnlockFeePayment.continueToAddress).isClickable())
        console.log("Application shows Continue To Address Button")
    });*/
   it("TC_08 Verify Address Tab After click on payment ", async () => {
        expect(await UnlockFeePayment.addressTab).toBeDisplayed()
        console.log("Application shows Address Tab")
        expect(await UnlockFeePayment.add1).toBeDisplayed()
        console.log(await (await UnlockFeePayment.add1).getText())
        expect(await UnlockFeePayment.addNewAdd).toBeDisplayed()
        console.log("User also able to add new address")
        expect(await UnlockFeePayment.editAddress).toBeDisplayed()
        expect(await UnlockFeePayment.removeAddress).toBeDisplayed()
        console.log("Edit And Delete Address Options Displayed")
    
       
    });

   
});