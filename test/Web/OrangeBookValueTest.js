const Base = require('../../BaseClass/base')
const Orange_Book_ValuePage = require('../../Pages/Web/OrangeBookValuePage')
describe('Orange Book Value', () => {
    it('TC_01 Verify the fields on OBV page', async () => {
       browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.title_pricing_report).toBeDisplayed()
        console.log("Get the new Pricing report Title dispalyed on the page")
        expect(await Orange_Book_ValuePage.title_pricing_report).toHaveTextContaining("Get the new Pricing report")
        expect(await Orange_Book_ValuePage.pricing_cal).toBeDisplayed()
        console.log("Used Vehicle Pricing Calculator Heading is Displayed")
        expect(await Orange_Book_ValuePage.pricing_cal).toHaveTextContaining("Used Vehicle Pricing Calculator")
        expect(await Orange_Book_ValuePage.buyer_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.buyer_tab).getText())
        console.log("I Want to buy Tab is displayed for Buyer")
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to Sell Tab is displayed for Sellet")
        await LoginWithPasswordPage.logout()
    }); 
    it('TC_02 Verify the pricing report functionality for "I want to Buy from an Individual"', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.buyer_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.buyer_tab).getText())
        console.log("I Want to buy Tab is displayed for Buyer")
        await Orange_Book_ValuePage.toTakeInputs()
        console.log("Pricing Report displayed on check OBV page")
        console.log(await (await Orange_Book_ValuePage.result).getText())
        expect(await Orange_Book_ValuePage.result).toHaveTextContaining("Audi")
        await LoginWithPasswordPage.logout()
    });
    it('TC_03 Verify the pricing report functionality for "I want to Buy from a Dealer"', async () =>{
       browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(Orange_Book_ValuePage.buyer_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.buyer_tab).getText())
        console.log("I Want to buy Tab is displayed for Buyer")
        await (await Orange_Book_ValuePage.from_dealer).click()
        await Orange_Book_ValuePage.toTakeInputs()
        console.log("Pricing Report displayed on check OBV page")
        console.log(await (await Orange_Book_ValuePage.result).getText())
        expect(await Orange_Book_ValuePage.result).toHaveTextContaining("Audi")
        await LoginWithPasswordPage.logout()
    });
    it('TC_04 Verify the pricing report functionality for "I want to sell to an Individual"', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        await (await Orange_Book_ValuePage.seller_tab).click()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to Sell Tab is displayed for Seller")
        await Orange_Book_ValuePage.toTakeInputs()
        expect(await Orange_Book_ValuePage.result).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.result).getText())
        expect(await Orange_Book_ValuePage.result).toHaveTextContaining("Audi")
        await LoginWithPasswordPage.logout()
    });
    it('TC_05 Verify the pricing report functionality for "I want to sell to a Dealer"', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        await (await Orange_Book_ValuePage.seller_tab).click()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to sell Tab is displayed for seller")
        await (await Orange_Book_ValuePage.to_dealer).click()
        await Orange_Book_ValuePage.toTakeInputs()
        expect(Orange_Book_ValuePage.result).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.result).getText())
        expect(Orange_Book_ValuePage.result).toHaveTextContaining("Audi")
        await LoginWithPasswordPage.logout()
    })
    it('TC_06 Verify the Grades on pricing report', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.buyer_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.buyer_tab).getText())
        console.log("I Want to buy Tab is displayed for Buyer")
        await Orange_Book_ValuePage.toTakeInputs()
        console.log(await (await Orange_Book_ValuePage.result).getText())
        expect(await Orange_Book_ValuePage.result).toHaveTextContaining("Audi")
        console.log("Pricing Report displayed on check OBV page")
        await expect(Orange_Book_ValuePage.good).toBeDisplayed()
        console.log("Grade is displayed on OBV page after submitting required details")
        expect(await Orange_Book_ValuePage.good).toHaveTextContaining("Good")
        console.log("OBV Pricing Report suggested the Good value of vehicle.. by analysing all the inputs given by the user.")
        await LoginWithPasswordPage.logout()
    });
    it('TC_07 Verify used functionality on vehicle pricing calulator on OBV', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to Sell Tab is displayed for seller")
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.used).toBeDisplayed()
        console.log("Used Option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.used).click()
        expect(await Orange_Book_ValuePage.used_vehicle_info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.used_vehicle_info).getText())
        await Orange_Book_ValuePage.toinputForUsedVechile()
        expect(await Orange_Book_ValuePage.good).toBeDisplayed()
        expect(await Orange_Book_ValuePage.good).toHaveTextContaining("Good")
        console.log('OBV Pricing Report suggested the fair value of vehicle basd on input given by the user')
        await LoginWithPasswordPage.logout()
    });
    it('TC_08 Verify New functionality on vehicle pricing calulator on OBV', async () => {
     browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.newOne).toBeDisplayed()
        console.log("New Option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.newOne).click()
        expect(Orange_Book_ValuePage.new_vehicle_info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.used_vehicle_info).getText())
        await Orange_Book_ValuePage.toinputForNewVechicle()
        expect(await Orange_Book_ValuePage.Price_ForNew_Vehicle).toBeDisplayed({ timeout: 5000 })
        expect(await Orange_Book_ValuePage.Price_ForNew_Vehicle).toHaveTextContaining("Price of New Vehicle is")
        console.log(await (await Orange_Book_ValuePage.New_Price).getText())
        await LoginWithPasswordPage.logout()
    })
    it('TC_09 Verify Exchange functionality on vehicle pricing calulator on OBV', async () => {
        browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.buyer_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.buyer_tab).getText())
        console.log("I Want to buy Tab is displayed for Buyer")
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        await (await Orange_Book_ValuePage.exchange).waitForDisplayed({ timeout: 3000 })
        expect(await Orange_Book_ValuePage.exchange).toBeDisplayed()
        console.log("Exchange option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.exchange).click()
        expect(await Orange_Book_ValuePage.exchange_Info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.exchange_Info).getText())
        await Orange_Book_ValuePage.toinputForExchangeVehicle()
        expect(await Orange_Book_ValuePage.check_ExchangePrice).toBeDisplayed()
        await (await Orange_Book_ValuePage.check_ExchangePrice).click()
        expect(await Orange_Book_ValuePage.heading_exchnagePrice).toBeDisplayed()
        expect(await Orange_Book_ValuePage.heading_exchnagePrice).toHaveTextContaining("Amount You will need to pay for this Exchange")
        console.log("After click on the Check Exchange  price Amount You will need to pay for this Exchange is displayed")
        await LoginWithPasswordPage.logout()
    });
    it('TC_10 Verify Future price functionality on vehicle pricing calulator on OBV', async () => {
         browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to sell Tab is displayed for seller")
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.futurePrice).toBeDisplayed()
        console.log("Future Price option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.futurePrice).click()
        expect(await Orange_Book_ValuePage.futurePrice_info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.futurePrice_info).getText())
        await Orange_Book_ValuePage.toinputForFutureVehicle()
        expect(await Orange_Book_ValuePage.checkFuture_Estimate).toBeDisplayed()
        await (await Orange_Book_ValuePage.checkFuture_Estimate).click()
        expect(await Orange_Book_ValuePage.futurePrice_Estimated).toHaveTextContaining("Future Price")
        console.log("Future Price of BMW 3 Series 320D LUXURY LINE BS6 evolution in 2022 after 200 Kms is Displayed")
        await LoginWithPasswordPage.logout()
    });
    it('TC_11 Verify Residual functionality on vehicle pricing calulator on OBV', async () => {
        browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to sell Tab is displayed for seller")
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.residual).toBeDisplayed()
        console.log("Residual Option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.residual).click()
        expect(Orange_Book_ValuePage.residual_info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.residual_info).getText())
        await Orange_Book_ValuePage.toinputForResidualVehicle()
        expect(await Orange_Book_ValuePage.checkResidual_Estimate).toBeDisplayed()
        await (await Orange_Book_ValuePage.checkResidual_Estimate).click()
        expect(await Orange_Book_ValuePage.ResidualPrice_Estimated).toHaveTextContaining("Residual Price")
        console.log("Residual Price of BMW 3 Series 320D LUXURY LINE BS6 2021 is displayed")
        await LoginWithPasswordPage.logout()
    });
    it('TC_12 Verify functionality of pricing Certificate', async () => {
        browser.url('/')
        await Orange_Book_ValuePage.toVehiclePricingCalculator()
        expect(await Orange_Book_ValuePage.seller_tab).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.seller_tab).getText())
        console.log("I Want to sell Tab is displayed for seller")
        await Orange_Book_ValuePage.toTakeInputs()
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.used).toBeDisplayed()
        console.log("Used Option shown on the Vehicle Pricing Calculator")
        await (await Orange_Book_ValuePage.used).click()
        expect(await Orange_Book_ValuePage.used_vehicle_info).toBeDisplayed()
        console.log(await (await Orange_Book_ValuePage.used_vehicle_info).getText())
        await (await Orange_Book_ValuePage.IWantToBuy2).click()
        await (await Orange_Book_ValuePage.from_individual2).click()
        await Orange_Book_ValuePage.toinputForUsedVechile()
        expect(await Orange_Book_ValuePage.check_OBV).toBeDisplayed()
        expect(await Orange_Book_ValuePage.check_OBV).toHaveTextContaining("Check OBV")
        console.log("Check OBV tab is shown after giving details for Used car on Vechile Pricing Calculator")
        await (await Orange_Book_ValuePage.orangeBookValue_next).click()
        console.log("Towards the options like New,Used ,Exchange on Vechile Pricing Calculator")
        expect(await Orange_Book_ValuePage.viewPricingCertificate).toBeDisplayed()
        console.log("View Pricing Certificate Button is Dsplayed")
        await (await Orange_Book_ValuePage.viewPricingCertificate).click()
        await (browser.url('https://cdn1.orangebookvalue.com/photos/images/obv_sample_report.pdf'))
        console.log("Url shows to Download Pricing Certificate")
        expect(await browser.getUrl()).toHaveTextContaining("obv_sample_report.pdf")
        
    });
});