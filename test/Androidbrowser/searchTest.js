const base = require("../../BaseClass/base");
const searchPage = require("../../Pages/Androidbrowser/searchPage");
describe('Search', async () => {
    beforeEach(async () => {
    await driver.closeApp()
    await driver.launchApp()
    });
  it('TC_01 Verify Search functionality on Main header', async () => {
    await browser.url('/')
    var searchItem="creta"  
    expect(searchPage.searchBox).toBeDisplayed()
    console.log("Search Box is displayed on Home Page")
    await (await searchPage.searchBox).click()
    console.log("Clicked on Search Box")
    await (await searchPage.searchBox).setValue(searchItem)
    console.log("Required Vehicle name entered in the search Box")
    console.log("Searching for "+searchItem)
    await driver.longPressKeyCode(66, undefined, undefined)
    expect(await searchPage.cretaResult).toBeDisplayed()
    expect(await searchPage.cretaResult).toHaveTextContaining(searchItem)
    console.log("Using Seacth box User is able to search required items")
    console.log("First element displayed as :"+await(await searchPage.cretaResult).getText())
    });
    it('TC_02 Verify Search functionality on Vista Link', async () => {
    await browser.url('/')
    await base.swipeUp()
    console.log("Scrolling to the Vista Link")
    expect(await searchPage.bikeVistaLink).toBeDisplayed()
    console.log("Vista link of Bikes is Displayed")
     await(await searchPage.bikeVistaLink).waitForDisplayed({timeout:30000})
    await (await searchPage.bikeVistaLink).click()
    console.log("Clicked On Vista Link of Super Cars")
    await browser.pause(3000)
    expect(await searchPage.vistaLinkResult).toBeDisplayed()
    console.log("User able to navigate to required page by clicking related Vista Links")
    });
    it('TC_03 Verify the Popular Search Functionality from the Home Page', async () => {  
    await browser.url('/')
    expect(await searchPage.searchBoxHeader).toBeDisplayed()
    console.log("Search Box heading is displayed");
    expect(searchPage.searchBox).toBeDisplayed()
    console.log("Search Box is Displayed")
    await (await searchPage.searchBox).click()
    console.log("Clicked On Search Box")
    await browser.pause(10000)
    expect(await searchPage.trendingSearch).toBeDisplayed()
    console.log("Trending Searches is Displayed")
    expect(searchPage.mainSearchResult).toBeDisplayed()
    console.log("List of Vehicles Displayed under the Trending Searches")
    });
    it('TC_04 Verify the Auto-select Functionality of search on Home Page', async () => {
    await browser.url('/')
    var searchItem="Thar"  
    expect(searchPage.searchBox).toBeDisplayed()
    console.log("Search Box is displayed")
    await (await searchPage.searchBox).click()
    console.log("CLicked on Search Box")
    await (await searchPage.searchBox).setValue(searchItem)
    console.log("Searching for "+searchItem)
    await driver.longPressKeyCode(66, undefined, undefined)
    expect(await searchPage.tharResult).toBeDisplayed()
    console.log("Result get displayed")
    expect(await searchPage.tharResult).toHaveTextContaining(searchItem)
    console.log("Using Seacth box User is able to search required items")
    console.log("First element displayed as : "+await(await searchPage.tharResult).getText())
    });
    
    it('TC_05 Verify the Sorting Functinality of Search', async () => {
    await browser.url('/')
    var searchItem="Activa"
    expect(searchPage.searchBox).toBeDisplayed()
    await (await searchPage.searchBox).click()
    await (await searchPage.searchBox).setValue(searchItem)
    console.log("Searching for "+searchItem)
    await driver.longPressKeyCode(66, undefined, undefined)
    expect(await searchPage.headingVehicle).toBeDisplayed()
    expect(await searchPage.headingVehicle).toHaveTextContaining(searchItem)
    console.log("Using Seacth box User is able to search required items")
    expect(await searchPage.sort).toBeDisplayed()
    console.log("Sort opton is availbale on Page")
    //await(await searchPage.Sort).waitForClickable({ timeout: 3000 })
    await(await searchPage.sort).click()
    console.log("Clicked On Sort Option")
    expect(await searchPage.sortingLable).toBeDisplayed()
    console.log("Sorting Lable is availbale on Page")
    console.log("Sorting Options displayed as ->:")
    console.log(await (await searchPage.nearMe).getText())
    console.log(await (await searchPage.priceLowToHigh).getText())
    console.log(await (await searchPage.pricehighToLow).getText())
    console.log(await (await searchPage.kmsdriven).getText())
    console.log(await (await searchPage.Year).getText())
    console.log(await (await searchPage.fullCircle).getText())
    console.log(await (await searchPage.mostViewed).getText())
    console.log(await (await searchPage.mostRecent).getText())
    console.log("Expected Sorting option is availbale")
    await(await searchPage.Year).click()
    console.log("Clicked on Year (Newest to Oldest)")
    expect(await searchPage.sortResultNew).toBeDisplayed()
    console.log(await (await searchPage.sortResultNew).getText())
    await base.swipeUp()
    expect(await searchPage.sortResultNew).toBeDisplayed()
    console.log(await (await searchPage.sortResultNew).getText())
    console.log("Activa list is displayed according to applied Filter")
    });
    
    it('TC 06 Verify the Filter Functionality', async () => {
    await browser.url('/')
    var searchItem="Honda City"
    expect(searchPage.searchBox).toBeDisplayed()
    await (await searchPage.searchBox).click()
    await (await searchPage.searchBox).setValue(searchItem)
    console.log("Searching for "+searchItem)
    await driver.longPressKeyCode(66, undefined, undefined)
    expect(await searchPage.hondaResult).toBeDisplayed()
    expect(await searchPage.hondaResult).toHaveTextContaining(searchItem)
    console.log("Using Seacth box User is able to search required items")
    expect(await searchPage.filter).toBeDisplayed()
    console.log("Filter opton is availbale on Page")
    //await(await searchPage.filter).waitForClickable({ timeout: 3000 })
    await(await searchPage.filter).click()
    console.log("Clicked On Filter Option")
    console.log("Available Filter Options are-->")
    expect(await searchPage.locationFilter).toBeDisplayed()
    console.log(await(await searchPage.locationFilter).getText())
    //expect(await searchPage.PriceFilter).toBeDisplayed()
    //console.log(await(await searchPage.PriceFilter).getText())
    expect(await searchPage.modelFilter).toBeDisplayed()
    console.log(await(await searchPage.modelFilter).getText())
    expect(await searchPage.yearFilter).toBeDisplayed()
    console.log(await(await searchPage.yearFilter).getText())
    expect(await searchPage.certificationFilter).toBeDisplayed()
    console.log(await(await searchPage.certificationFilter).getText())
    expect(await searchPage.makeFilter).toBeDisplayed()
    console.log(await(await searchPage.makeFilter).getText())
    expect(await searchPage.BodyTypeFilter).toBeDisplayed()
    console.log(await(await searchPage.BodyTypeFilter).getText())
    expect(await searchPage.colorFilter).toBeDisplayed()
    console.log(await(await searchPage.colorFilter).getText())
    expect(await searchPage.warrantyFilter).toBeDisplayed()
    console.log(await(await searchPage.warrantyFilter).getText())
    expect(await searchPage.HistoryFilter).toBeDisplayed()
    console.log(await(await searchPage.HistoryFilter).getText())
    await(await searchPage.makeFilter).click()
    console.log("Clicked on Make filter")
    await(await searchPage.applyFilter).click()
    console.log("Clicked on Apply Filter Button")
    expect(await searchPage.filterResult).toBeDisplayed()
    console.log(await(await searchPage.filterResult).getText())
    console.log("Expected result shown using applied Filter")
    });
    it('TC_08 Verify the functionality of recent Search', async () => {
    await browser.url('/')
    expect(await searchPage.searchBoxHeader).toBeDisplayed()
    console.log("Search Box heading is displayed");
    expect(searchPage.searchBox).toBeDisplayed()
    console.log("Search Box is Displayed")
    await (await searchPage.searchBox).click()
    console.log("Clicked On Search Box")
    await(await searchPage.recentSearch).waitForDisplayed({timeout:10000})
    console.log("Recent Searches is Displayed")
    await expect(searchPage.mainSearchResult).toBeDisplayed()
    console.log("List of Vehicles Displayed under the Recent Searches")
    });
});