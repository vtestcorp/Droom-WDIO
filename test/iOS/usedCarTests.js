const Base = require('../../BaseClass/base');
const usedCarPage = require('../../Pages/iOS/usedCarPage');
const UsedCarPage = require("../../Pages/iOS/usedCarPage")
describe('Used Car', async () => {
   it('TC01 Verify car option is the display with used Condition to the buyer', async () => {
     await Base.iosLoginAsBuyer()
     console.log("Create Requirement")
     await (await UsedCarPage.createReq).waitForDisplayed()
     expect (await UsedCarPage.createReq).toBeDisabled()
     console.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
     await (await UsedCarPage.createReq).click()
     console.log("Clicked On Create Requirement")
     expect(await UsedCarPage.carimg).toBeDisplayed()
     console.log('Car option displayed')
     expect(await UsedCarPage.scooter).toBeDisplayed()
     console.log('scooter option displayed')
     expect(UsedCarPage.newButton).toBeDisplayed()
     console.log('New option displayed under condition')
     expect(await UsedCarPage.usedButton).toBeDisplayed()
     console.log('Used redio button displayed')
     expect(await UsedCarPage.location).toBeDisplayed()
     console.log('Location input box displayed')
     expect(await UsedCarPage.currentLocation).toBeDisplayed()
     console.log('Detect Current Location option displayed')
     expect(await UsedCarPage.nextButton).toBeDisplayed()
     console.log('Next button displayed')
   });
   it('TC02 Verify user able to select location using location option', async () => {
    await Base.skipStartup()
    await Base.iosLoginAsBuyer()
    await (await UsedCarPage.createReq).click()
    console.log("Clicked On Create Requirement")
    expect (await UsedCarPage.createReq).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
    expect(await UsedCarPage.currentLocation).toBeDisplayed()
    console.log('Current Location displayed')
    expect(await UsedCarPage.currentLocation).toBeClickable()
    console.log('Current Location is Clickable')
  });
   it('TC03 Verify error message without entering location', async () => {
    await Base.skipStartup()
    await Base.iosLoginAsBuyer()
    await (await UsedCarPage.createReq).click()
    console.log("Clicked On Create Requirement")
    expect (await UsedCarPage.headingSelectPage).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
    expect(await UsedCarPage.currentLocation).toBeDisplayed()
    console.log('Current Location displayed')
    expect(await UsedCarPage.currentLocation).toBeClickable()
    console.log('Current Location is Clickable')
     await UsedCarPage.clickOnNext()
     expect(UsedCarPage.errorMsg).toBeDisplayed()
    console.log('Error message Displayed')
   });
   it('TC04 Verify user able to select Car model from Entering your vehicle details as per requirement', async () => {
     await Base.iosLoginAsBuyer()
     await (await UsedCarPage.createReq).click()
     console.log("Clicked On Create Requirement")
     expect (await UsedCarPage.createReq).toBeDisabled()
     cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
     await UsedCarPage.clickOnNext()
     console.log("CLicked On Next Button")
     await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
     expect (await UsedCarPage.selectCarHeading).toBeDisabled()
     console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
     await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
     expect(await UsedCarPage.vehicleDetails).toBeDisplayed()
     cconsole.log("Enter DFetails Lable Displayed As:"+await(await UsedCarPage.vehicleDetails).getText())
     expect(await UsedCarPage.searchTextField).toBeDisplayed()
     console.log("Text field to eneter required Vehicle Details id displayed")
     await (await UsedCarPage.searchTextField).setValue("Maruti Suzuki Swift")
     console.log("Setting the value to be search")
     expect(await UsedCarPage.selectSearchResult).toBeDisplayed()
     console.log("Select Search Result Displayed As:"+await(await UsedCarPage.selectSearchResult).getText())
    expect(await UsedCarPage.doneBtn).toBeDisplayed()
    console.log("Done Button displayed on Select Search Result")
    expect(await UsedCarPage.cancelBtn).toBeDisplayed()
    console.log("Done Button displayed on Select Search Result")
    console.log("User can select Car model from Entering your vehicle details as per requirement")
});

  
   it('TC05 Verify user able to select car model through select from the dropdown as per requirement', async () => {
    await Base.iosLoginAsBuyer()
     await (await UsedCarPage.createReq).click()
     console.log("Clicked On Create Requirement")
     expect (await UsedCarPage.createReq).toBeDisabled()
     cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
     await UsedCarPage.clickOnNext()
     console.log("CLicked On Next Button")
     await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
     expect (await UsedCarPage.selectCarHeading).toBeDisabled()
     console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
     await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
     expect(await UsedCarPage.vehicleDetails).toBeDisplayed()
     cconsole.log("Enter DFetails Lable Displayed As:"+await(await UsedCarPage.vehicleDetails).getText()) 
    await(await usedCarPage.selectVehicle).click()
    console.log("Clicked on Select Vehicle")
   //Select Make, Model, Year and trim has no locatotrs there
   });

   it('TC06 Verify user able to select car model through Let Droom Suggest for you as per requirement', async () => {
    await Base.iosLoginAsBuyer()
    await (await UsedCarPage.createReq).click()
    console.log("Clicked On Create Requirement")
    expect (await UsedCarPage.createReq).toBeDisabled()
    cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
    await UsedCarPage.clickOnNext()
    console.log("CLicked On Next Button")
    await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
    expect (await UsedCarPage.selectCarHeading).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
    await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
    expect (await UsedCarPage.droomSugg).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.droomSugg).getText())
    expect(await usedCarPage.bodyType).toBeDisplayed()
    console.log("Get Personalised Suggestion page get displayed for suggestion")
   });
it('Tc_07 Verify user able to select used car as per the budget', async () => {
  await Base.iosLoginAsBuyer()
  await (await UsedCarPage.createReq).click()
  console.log("Clicked On Create Requirement")
  expect (await UsedCarPage.createReq).toBeDisabled()
  cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
  await UsedCarPage.clickOnNext()
  console.log("CLicked On Next Button")
  await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
  expect (await UsedCarPage.selectCarHeading).toBeDisabled()
  console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
  await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
  expect (await UsedCarPage.droomSugg).toBeDisabled()
  console.log("Select Heading Displayed As:"+await(await UsedCarPage.droomSugg).getText())
  expect(await usedCarPage.priceRange).toBeDisplayed()
  console.log("Price Range displayed on page")
   });
  it('TC08 Verify user able to select used car as per the Fuel type', async () => {
    await Base.iosLoginAsBuyer()
    await (await UsedCarPage.createReq).click()
    console.log("Clicked On Create Requirement")
    expect (await UsedCarPage.createReq).toBeDisabled()
    cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
    await UsedCarPage.clickOnNext()
    console.log("Clicked On Next Button")
    await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
    expect (await UsedCarPage.selectCarHeading).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
    await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
    expect (await UsedCarPage.droomSugg).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.droomSugg).getText())
    expect(await usedCarPage.suv).toBeDisplayed()
    console.log("Body Types displayed for suggestion")
    await(await usedCarPage.suv).click()
    console.log("Clicked on SUV Body type")
    await(await usedCarPage.nextButton).click()
    console.log("Clicked on Next Button")
    expect(await usedCarPage.lastStepHeading).toBeDisplayed()
    console.log("Last step page Heading Displayed As:"+await(await UsedCarPage.lastStepHeading).getText())
    expect(await usedCarPage.urCriteria).toBeDisplayed()
    console.log("Select Vechile Displayed With:"+await(await UsedCarPage.ur).getText())
    await(await usedCarPage.fortEcoSport).click()
    console.log("Selected the Fort Ecosport Option")
    await(await usedCarPage.nextButton).click()
    console.log("Clicked on Next Button")
    expect(await usedCarPage.fuleTypes).toBeDisplayed()
    console.log("Fuel Types displayed") 
    expect(await usedCarPage.petrol).toBeDisplayed()
    console.log("Petrol Fuel Type displayed")
  });
it('TC-09 Verify user able to select used car as per the KMS Driven Range',async () =>{
    await Base.iosLoginAsBuyer()
    await (await UsedCarPage.createReq).click()
    console.log("Clicked On Create Requirement")
    expect (await UsedCarPage.createReq).toBeDisabled()
    cconsole.log("Select Heading Displayed As:"+await(await UsedCarPage.headingSelectPage).getText())
    await UsedCarPage.clickOnNext()
    console.log("Clicked On Next Button")
    await (await UsedCarPage.selectCarHeading).waitForEnabled({timeout: 10000 })
    expect (await UsedCarPage.selectCarHeading).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.selectCarHeading).getText())
    await (await UsedCarPage.droomSugg).waitForEnabled({timeout: 30000 })
    expect (await UsedCarPage.droomSugg).toBeDisabled()
    console.log("Select Heading Displayed As:"+await(await UsedCarPage.droomSugg).getText())
    expect(await usedCarPage.suv).toBeDisplayed()
    console.log("Body Types displayed for suggestion")
    await(await usedCarPage.suv).click()
    console.log("Clicked on SUV Body type")
    await(await usedCarPage.nextButton).click()
    console.log("Clicked on Next Button")
    expect(await usedCarPage.lastStepHeading).toBeDisplayed()
    console.log("Last step page Heading Displayed As:"+await(await UsedCarPage.lastStepHeading).getText())
    expect(await usedCarPage.urCriteria).toBeDisplayed()
    console.log("Select Vechile Displayed With:"+await(await UsedCarPage.ur).getText())
    await(await usedCarPage.fortEcoSport).click()
    console.log("Selected the Fort Ecosport Option")
    await(await usedCarPage.nextButton).click()
    console.log("Clicked on Next Button")
//WIP
});
   
});