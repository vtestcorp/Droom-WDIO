const base = require('../../BaseClass/base');
const UsedCarPage = require('../../Pages/Android/usedCarPage');

  describe('Used Car', () => {
    beforeEach(async () => {
        await driver.closeApp()
        await driver.launchApp()
    });
 it('TC_01 Verify car option is the display with used Condition to the buyer', async () => {
    await base.androidLoginAsBuyer()
    console.log("login As Buyer")
    await browser.pause("1000")
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click()
    console.log("selected Car category")
    expect(await UsedCarPage.caroption).toBeDisplayed()
    console.log('Car option displayed')
    expect(await UsedCarPage.scooteroption).toBeDisplayed()
    console.log('scooter option displayed')
    expect(await UsedCarPage.newRadio).toBeDisplayed()
    console.log('New Condition option displayed')
    expect(await UsedCarPage.usedRadio).toBeDisplayed()
    console.log('Used Condition option displayed')
    expect(await UsedCarPage.location).toBeDisplayed()
    console.log('Location displayed')
    expect(await UsedCarPage.searchLocation).toBeDisplayed()
    console.log('search my location displayed')
    expect(await UsedCarPage.nextBtn).toBeDisplayed()
    console.log('Next Button displayed')
    });


 it('TC_03 Verify error message without entering location', async () => {
       await base.androidLoginAsBuyer()
       console.log("login As Buyer")
       await browser.pause("1000")
       await (await UsedCarPage.buy).click()
       await (await UsedCarPage.carimg).click()
       console.log("selected Car category")
       await (await UsedCarPage.caroption).click()
       await (await UsedCarPage.nextBtn).click()
       expect(await UsedCarPage.errormsg).toBeDisplayed()
       console.log('error message displayed')
    
   });

    it('TC_02 Verify user able to select location using location option', async () => {
      await base.androidLoginAsBuyer()
      await (await UsedCarPage.buy).click()
      await (await UsedCarPage.carimg).click()
      expect(await UsedCarPage.heading1).toBeDisplayed()
      console.log(await (await UsedCarPage.heading1).getText())
      await (await UsedCarPage.caroption).click()
      expect(await UsedCarPage.searchLocation).toBeDisplayed()
      console.log('search my location displayed')
      await (await UsedCarPage.searchLocation).click()
      console.log("clicked on search my location")
      await (await UsedCarPage.cityName).click()
      console.log("selected city")
      await (await UsedCarPage.nextBtn).click()
      expect(await UsedCarPage.heading2).toBeDisplayed()
      console.log(await (await UsedCarPage.heading2).getText())
      console.log("User able to select location and navigate to next window")
     
   });
  
 it('TC_04 Verify user able to select car model from Entering your vehicle details as per requirement', async () => {
      await base.androidLoginAsBuyer()
      await (await UsedCarPage.buy).click()
      await (await UsedCarPage.carimg).click() 
      await (await UsedCarPage.caroption).click()
      await (await UsedCarPage.searchLocation).click()
      await (await UsedCarPage.cityName).click()
      console.log("selected city")
      await (await UsedCarPage.nextBtn).click()
      expect(await UsedCarPage.heading2).toBeDisplayed()
      console.log(await (await UsedCarPage.heading2).getText())
      expect(await UsedCarPage.subHeading).toBeDisplayed()
      console.log(await (await UsedCarPage.subHeading).getText())
      expect(await UsedCarPage.enterVehicleHeading).toBeDisplayed()
      console.log(await (await UsedCarPage.enterVehicleHeading).getText())
      expect(await UsedCarPage.searchField).toBeDisplayed()
      console.log("search field displayed")
      await (await UsedCarPage.searchField).setValue("Maruti Suzuki Ertiga VDi 2015")
      await (await UsedCarPage.car1).click()
      console.log("User can select Car using Search Field")
   });
   it('TC_05 Verify user able to select car model through select from the dropdown as per requirement', async () => {
      await base.androidLoginAsBuyer()
      await (await UsedCarPage.buy).click()
      await (await UsedCarPage.carimg).click() 
      await (await UsedCarPage.caroption).click()
      await (await UsedCarPage.searchLocation).click()
      await (await UsedCarPage.cityName).click()
      console.log("selected city")
      await (await UsedCarPage.nextBtn).click()
      expect(await UsedCarPage.heading2).toBeDisplayed()
      console.log(await (await UsedCarPage.heading2).getText())
      browser.pause('2000')
      expect(await UsedCarPage.subHeading).toBeDisplayed()
      console.log(await (await UsedCarPage.subHeading).getText())
      expect(await UsedCarPage.selectVehicle).toBeDisplayed()
      await (await UsedCarPage.selectVehicle).click()
      await UsedCarPage.selectVehicleFromDropdown()
      await (await UsedCarPage.nextBtn).click()
      expect(await UsedCarPage.heading3).toBeDisplayed()
      console.log(await (await UsedCarPage.heading3).getText())
      expect(await UsedCarPage.selectCar).toBeDisplayed()
      console.log(await (await UsedCarPage.selectCar).getText())
      expect(await UsedCarPage.addmoreVehicle).toBeDisplayed()
      console.log('successfully Car selected from dropdown')
   });

 it('TC_06 Verify user able to select car model through Let Droom Suggest for you as per requirement', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click() 
    await (await UsedCarPage.caroption).click()
    await (await UsedCarPage.searchLocation).click()
    await (await UsedCarPage.cityName).click()
    console.log("selected city")
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.heading2).toBeDisplayed()
    console.log(await (await UsedCarPage.heading2).getText())
    expect(await UsedCarPage.subHeading).toBeDisplayed()
    console.log(await (await UsedCarPage.subHeading).getText())
    expect(await UsedCarPage.droomSuggest).toBeDisplayed()
    console.log('droom suggest displayed')
    await (await UsedCarPage.droomSuggest).click()
    console.log("clicked on droom suggest for you")
    expect(await UsedCarPage.priceRange).toBeDisplayed()
    console.log('Price range displayed')
    expect(await UsedCarPage.bodyType).toBeDisplayed()
    console.log('body type displayed')
    await UsedCarPage.droomSuggestCar()
    expect(await UsedCarPage.heading6).toBeDisplayed()
    console.log(await (await UsedCarPage.heading6).getText())
    await (await UsedCarPage.vehicle1).click()
    await (await UsedCarPage.nextBtn).click()
    expect(await  UsedCarPage.budget).toBeDisplayed()
    console.log('What is Your Budget? option Display')
    console.log('user able to select bike from droom suggest')
   });

   it('TC_07 Verify user able to select use car as per the budget', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click() 
    await (await UsedCarPage.caroption).click()
    await (await UsedCarPage.searchLocation).click()
    await (await UsedCarPage.cityName).click()
    console.log("selected city")
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.subHeading).toBeDisplayed()
    console.log(await (await UsedCarPage.subHeading).getText())
    expect(await UsedCarPage.selectVehicle).toBeDisplayed()
    await (await UsedCarPage.selectVehicle).click()
    await UsedCarPage.selectVehicleFromDropdown()
    await (await UsedCarPage.nextBtn).click()
    browser.pause('2000')
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.budget).toBeDisplayed()
    await browser.touchAction([
     { action: 'press', x: 200, y: 200 },
     { action: 'moveTo', x: 200, y: 300 },
     'release'
    ])
     console.log("price slider displayed")
     await (await UsedCarPage.nextBtn).click()
     await (await UsedCarPage.nextBtn).click()
     await (await UsedCarPage.nextBtn).click()
     await (await UsedCarPage.nextBtn).click()
     await (await UsedCarPage.submitBtn).click()
     await (await UsedCarPage.submitViewMatch).click()
     await (await UsedCarPage.allrequirement).click()
     expect(await UsedCarPage.priceRange).toBeDisplayed()
     console.log("price Range displayed")
    });
 
   it('TC_08 Verify user able to select use car as per the Fuel type', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click() 
    await (await UsedCarPage.caroption).click()
    await (await UsedCarPage.searchLocation).click()
    await (await UsedCarPage.cityName).click()
    console.log("selected city")
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.subHeading).toBeDisplayed()
    console.log(await (await UsedCarPage.subHeading).getText())
    expect(await UsedCarPage.selectVehicle).toBeDisplayed()
    await (await UsedCarPage.selectVehicle).click()
    await UsedCarPage.selectVehicleFromDropdown()
    await (await UsedCarPage.nextBtn).click()
    browser.pause('2000')
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.fuelType).toBeDisplayed()
    expect(await UsedCarPage.fuel).toBeDisplayed()
    console.log(await (await UsedCarPage.fuel).getText())
    await (await UsedCarPage.fueltoggle).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.submitBtn).click()
    await (await UsedCarPage.submitViewMatch).click()
    await (await UsedCarPage.allrequirement).click()
    console.log("user able to select fuel type")
  });

  it('TC_09 Verify user able to select used car as per the KMS Driven Range',async () =>{
    await base.androidLoginAsBuyer()
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click() 
    await (await UsedCarPage.caroption).click()
    await (await UsedCarPage.searchLocation).click()
    await (await UsedCarPage.cityName).click()
    console.log("selected city")
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.subHeading).toBeDisplayed()
    console.log(await (await UsedCarPage.subHeading).getText())
    expect(await UsedCarPage.selectVehicle).toBeDisplayed()
    await (await UsedCarPage.selectVehicle).click()
    await UsedCarPage.selectVehicleFromDropdown()
    await (await UsedCarPage.nextBtn).click()
    browser.pause('2000')
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.kmDrivenRange).toBeDisplayed()
    await (await UsedCarPage.kmSlider).moveTo()
    await (await UsedCarPage.kmSlider).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.submitBtn).click()
    await (await UsedCarPage.submitViewMatch).click()
    await (await UsedCarPage.allrequirement).click()
    console.log("KM Range displayed")

  });

 
  it('TC_10 Verify user able to select use car as per the Exterior Color', async () => {
      
    await base.androidLoginAsBuyer()
    await (await UsedCarPage.buy).click()
    await (await UsedCarPage.carimg).click() 
    await (await UsedCarPage.caroption).click()
    await (await UsedCarPage.searchLocation).click()
    await (await UsedCarPage.cityName).click()
    console.log("selected city")
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.subHeading).toBeDisplayed()
    console.log(await (await UsedCarPage.subHeading).getText())
    expect(await UsedCarPage.selectVehicle).toBeDisplayed()
    await (await UsedCarPage.selectVehicle).click()
    await UsedCarPage.selectVehicleFromDropdown()
    await (await UsedCarPage.nextBtn).click()
    browser.pause('2000')
    await (await UsedCarPage.nextBtn).click()
    expect(await UsedCarPage.extColor).toBeDisplayed()
    await (await UsedCarPage.color1).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.nextBtn).click()
    await (await UsedCarPage.submitBtn).click()
    await (await UsedCarPage.submitViewMatch).click()
    await (await UsedCarPage.allrequirement).click()
    console.log("Exterior color displayed")
  });
  // it('Tc_11 Verify user able to select use car as per the Transmission Type', async () => {
  //   await driver.closeApp()
  //   await driver.launchApp()
  //   await Base.androidLoginAsBuyer()
  //   await UsedCarPage.submitRequirement()
  //   await (await UsedCarPage.currentLocation).click()
  //   await (await UsedCarPage.usedButton).touchAction('tap')
  //   await (await UsedCarPage.car).touchAction('tap')
  //   await UsedCarPage.clickOnNext()
  //   await driver.pause(7000)
  //   await UsedCarPage.slectFromDropDown()
  //   await UsedCarPage.selectVehicle()
  //   await UsedCarPage.clickOnNext()
  //   await (await UsedCarPage.carName).waitForDisplayed()
  //   expect(await UsedCarPage.carName).toBeDisplayed()
  //   expect(await UsedCarPage.addBtn).toBeDisplayed()
  //   await UsedCarPage.clickOnNext()
  //   await UsedCarPage.selectPetrol()
  //   await UsedCarPage.selectColor()
  //   await UsedCarPage.selectAutomatic()
  //   await UsedCarPage.clickOnNext()
  //   await UsedCarPage.selectDoYouAlsoNeed()
  //   await UsedCarPage.clickOnNext()
  //   expect(await UsedCarPage.almostDone).toBeDisplayed()
  //   await UsedCarPage.clickOnSubmit()
  //   await UsedCarPage.clickOngetRequirements()
  //   expect(await UsedCarPage.transmissionType).toBeDisplayed()
  //   console.log(await (await UsedCarPage.transmissionType).getText())
  //   expect(await UsedCarPage.newRequirements).toBeDisplayed()
  // });
//   it('Tc_12 Verify user able to select use car as per the Do you also need option', async () => {
//     browser.url('/')
//     await UsedCarPage.clickOnSubmitRequirements()
//     await (await UsedCarPage.currentLocation).click()
//     await (await UsedCarPage.used).click()
//     await (await UsedCarPage.car).click()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectCar()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.carName).toBeDisplayed()
//     expect(await UsedCarPage.addBtn).toBeDisplayed()
//     await UsedCarPage.selectPetrol()
//     await UsedCarPage.selectColor()
//     await UsedCarPage.selectAutomatic()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectDoYouAlsoNeed()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.almostDone).toBeDisplayed()
//     await UsedCarPage.clickOnSubmit()
//     await UsedCarPage.clickOngetRequirements()
//     expect(await UsedCarPage.service).toBeDisplayed()
//     console.log(await (await UsedCarPage.service).getText())
//     expect(await UsedCarPage.newRequirements).toBeDisplayed()
//   });
//   it('Tc_13 Verify user is able to select use car as per the How Quickly Do You Want to Buy? option', async () => {
//     browser.url('/')
//     await UsedCarPage.clickOnSubmitRequirements()
//     await (await UsedCarPage.currentLocation).click()
//     await (await UsedCarPage.used).click()
//     await (await UsedCarPage.car).click()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectCar()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.carName).toBeDisplayed()
//     expect(await UsedCarPage.addBtn).toBeDisplayed()
//     await UsedCarPage.selectPetrol()
//     await UsedCarPage.selectColor()
//     await UsedCarPage.selectAutomatic()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectDoYouAlsoNeed()
//     await UsedCarPage.selectHowQuickly()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.almostDone).toBeDisplayed()
//     await UsedCarPage.clickOnSubmit()
//     await UsedCarPage.clickOngetRequirements()
//     expect(await UsedCarPage.needToBuy).toBeDisplayed()
//     console.log(await (await UsedCarPage.needToBuy).getText())
//     expect(await UsedCarPage.newRequirements).toBeDisplayed()
//   });
//   it('Tc_14 Verify user is able to select use car as per the Do You Wish to Exchange Your Vehicle option', async () => {
//     browser.url('/')
//     await UsedCarPage.clickOnSubmitRequirements()
//     await (await UsedCarPage.currentLocation).click()
//     await (await UsedCarPage.used).click()
//     await (await UsedCarPage.car).click()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectCar()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.carName).toBeDisplayed()
//     expect(await UsedCarPage.addBtn).toBeDisplayed()
//     await UsedCarPage.selectPetrol()
//     await UsedCarPage.selectColor()
//     await UsedCarPage.selectAutomatic()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectDoYouAlsoNeed()
//     await UsedCarPage.selectHowQuickly()
//     await UsedCarPage.exchangeVehicle()
//     await UsedCarPage.selectVehicle()
//     await UsedCarPage.Enterkms()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.almostDone).toBeDisplayed()
//     await UsedCarPage.clickOnSubmit()
//     await UsedCarPage.clickOngetRequirements()
//     expect(await UsedCarPage.exchangeV).toBeDisplayed()
//     console.log(await (await UsedCarPage.exchangeV).getText())
//     expect(await UsedCarPage.newRequirements).toBeDisplayed()
//   });
//  
//   it('Tc_15 Validation for match count while req creation and in req page', async () => {
//     browser.url('/')
//     await UsedCarPage.clickOnSubmitRequirements()
//     await (await UsedCarPage.currentLocation).click()
//     await (await UsedCarPage.used).click()
//     await (await UsedCarPage.car).click()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectCar()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.carName).toBeDisplayed()
//     expect(await UsedCarPage.addBtn).toBeDisplayed()
//     await UsedCarPage.selectPetrol()
//     await UsedCarPage.selectColor()
//     await UsedCarPage.selectAutomatic()
//     await UsedCarPage.clickOnNext()
//     await UsedCarPage.selectDoYouAlsoNeed()
//     await UsedCarPage.clickOnNext()
//     expect(await UsedCarPage.almostDone).toBeDisplayed()
//     await UsedCarPage.clickOnSubmit()
//   });*/

});