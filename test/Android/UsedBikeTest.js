
const base = require('../../BaseClass/base')
const UsedBikePage = require("../../Pages/Android/UsedBikePage");
describe('Used Bike', () => {
    beforeEach(async () => {
        await driver.closeApp()
        await driver.launchApp()
    });
   it('TC_01 Verify Bike option is the display with used Condition to the buyer', async () => {
        await base.androidLoginAsBuyer()
        console.log("login As Buyer")
        await browser.pause("1000")
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        console.log("selected bike")
        expect(await UsedBikePage.caroption).toBeDisplayed()
        console.log('Car option displayed')
        expect(await UsedBikePage.scooteroption).toBeDisplayed()
        console.log('scooter option displayed')
        expect(await UsedBikePage.newRadio).toBeDisplayed()
        console.log('New Condition option displayed')
        expect(await UsedBikePage.usedRadio).toBeDisplayed()
        console.log('Used Condition option displayed')
        expect(await UsedBikePage.location).toBeDisplayed()
        console.log('Location displayed')
        expect(await UsedBikePage.searchLocation).toBeDisplayed()
        console.log('search my location displayed')
        expect(await UsedBikePage.nextBtn).toBeDisplayed()
        console.log('Next Button displayed')
    });

    it('TC_03 Verify error message without entering location', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        console.log("selected bike")
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.errormsg).toBeDisplayed()
        console.log('error message displayed')
    });

    it('TC_02 Verify user able to select location using location option', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        expect(await UsedBikePage.searchLocation).toBeDisplayed()
        console.log('search my location displayed')
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading1).toBeDisplayed()
        console.log("User able to select location and navigate to next window")
    });
    it('TC_04 Verify user able to select Bike model from Entering your vehicle details as per requirement', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        expect(await UsedBikePage.heading1).toBeDisplayed()
        console.log("Heading Displayed As:"+await(await UsedBikePage.heading1).getText())
        expect (await UsedBikePage.searchfield).toBeClickable()
        await (await UsedBikePage.searchfield).setValue("Bajaj Pulsar 180cc 2016")
        await (await UsedBikePage.bike1).click()
        console.log("User can select Bike using Search Field")
    });

   it('TC_05 Verify user able to select bike model through select from the dropdown as per requirement', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        expect(await UsedBikePage.heading1).toBeDisplayed()
        await browser.pause('2000')
        expect(await UsedBikePage.selectVehicle).toBeDisplayed()
        await (await UsedBikePage.selectVehicle).click()
        await UsedBikePage.selectBikeVehicle()
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.bikeName).toBeDisplayed()
        console.log(await (await UsedBikePage.bikeName).getText())
        expect(await UsedBikePage.addmoreVehicle).toBeDisplayed()
        console.log('successfully bike selected from dropdown')
    });

 it('TC_06 Verify user able to select bike model through Let Droom Suggest for you as per requirement', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        expect(await UsedBikePage.droomSuggest).toBeDisplayed()
        console.log('droom suggest displayed')
        await (await UsedBikePage.droomSuggest).click()
        console.log("clicked on droom suggest for you")
        expect(await UsedBikePage.heading2).toBeDisplayed()
        console.log('navigate to get personalised suggestion')
        expect(await UsedBikePage.priceRange).toBeDisplayed()
        console.log('Price range displayed')
        expect(await UsedBikePage.bodyType).toBeDisplayed()
        console.log('body type displayed')
        await UsedBikePage.droomSuggestBike()
        expect(await UsedBikePage.heading6).toBeDisplayed()
        await (await UsedBikePage.vehicle1).click()
        await (await UsedBikePage.nextBtn).click()
        expect(await  UsedBikePage.budget).toBeDisplayed()
        console.log('What is Your Budget? option Display')
        console.log('user able to select bike from droom suggest')
     });

  it('TC_07 Verify user able to select use bike as per the budget', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedBikePage.buy).click()
    await (await UsedBikePage.bikeimg).click()
    await (await UsedBikePage.bikeoption).click()
    await (await UsedBikePage.searchLocation).click()
    console.log("clicked on search my location")
    await (await UsedBikePage.cityName).click()
    console.log("selected city")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next button")
    await browser.pause('2000')
    expect(await UsedBikePage.selectVehicle).toBeDisplayed()
    await (await UsedBikePage.selectVehicle).click()
    await UsedBikePage.selectBikeVehicle()
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.bikeName).toBeDisplayed()
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.budget).toBeDisplayed()
   await browser.touchAction([
    { action: 'press', x: 200, y: 200 },
    { action: 'moveTo', x: 200, y: 300 },
    'release'
])
    console.log("price slider displayed")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next1 button")
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    console.log("clicked on Next2 button")
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    console.log("clicked on Next3 button")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next4 button")
    await (await UsedBikePage.submitBtn).click()
    await (await UsedBikePage.submitViewMatch).click()
    await (await UsedBikePage.allrequirement).click()
    expect(await UsedBikePage.priceRange).toBeDisplayed()
    console.log("price Range displayed")
   });

  it('TC_08 Verify user able to select use bike as per the KMS Driven Range', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedBikePage.buy).click()
    await (await UsedBikePage.bikeimg).click()
    await (await UsedBikePage.bikeoption).click()
    await (await UsedBikePage.searchLocation).click()
    console.log("clicked on search my location")
    await (await UsedBikePage.cityName).click()
    console.log("selected city")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next button")
    await browser.pause('2000')
    expect(await UsedBikePage.selectVehicle).toBeDisplayed()
    await (await UsedBikePage.selectVehicle).click()
    await UsedBikePage.selectBikeVehicle()
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.bikeName).toBeDisplayed()
    console.log(await (await UsedBikePage.bikeName).getText())
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.kmDriven).toBeDisplayed()
    console.log("KM Driven Range Displayed")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next1 button")
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    console.log("clicked on Next2 button")
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    console.log("clicked on Next3 button")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next4 button")
    await (await UsedBikePage.submitBtn).click()
    await (await UsedBikePage.submitViewMatch).click()
    await (await UsedBikePage.allrequirement).click()
    expect(await UsedBikePage.kmDriven).toBeDisplayed()
    console.log("KM Driven Range displayed")
    });


   it('TC_09 Verify user able to select use bike as per the Color', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        await browser.pause('2000')
        expect(await UsedBikePage.selectVehicle).toBeDisplayed()
        await (await UsedBikePage.selectVehicle).click()
        await UsedBikePage.selectBikeVehicle()
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.bikeName).toBeDisplayed()
        console.log(await (await UsedBikePage.bikeName).getText())
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading3).toBeDisplayed()
        console.log("basic details displayed")
        expect(await UsedBikePage.extcolor).toBeDisplayed()
        console.log("exterior color list displayed")
        await (await UsedBikePage.color).click()
        console.log("black color selected")
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading4).toBeDisplayed()
        console.log("navigate to last step")
    });

 it('TC_10 Verify user able to select use bike as per the Do you also need option', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        await browser.pause('2000')
        expect(await UsedBikePage.selectVehicle).toBeDisplayed()
        await (await UsedBikePage.selectVehicle).click()
        await UsedBikePage.selectBikeVehicle()
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.bikeName).toBeDisplayed()
        console.log(await (await UsedBikePage.bikeName).getText())
        await (await UsedBikePage.nextBtn).click()
        await (await UsedBikePage.color).click()
        console.log("selected color")
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading4).toBeDisplayed()
        console.log("navigate to last step")
        expect(await UsedBikePage.doyouneedoption).toBeDisplayed()
        console.log("Do You Need Option displayed")
        expect(await UsedBikePage.loan).toBeDisplayed()
        console.log("loan toggle displayed")
        await (await UsedBikePage.loantoggle).click()
        await (await UsedBikePage.nextBtn).click()
        await browser.pause('2000')
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading5).toBeDisplayed()
        console.log("last step to submit")
        expect(await UsedBikePage.submitBtn).toBeDisplayed()
        await (await UsedBikePage.submitBtn).click()
        console.log("clicked on submit")
        console.log("user able to select do you need option")
    });

      it('TC_11 Verify user is able to select use bike as per the How Quickly Do You Want to Buy? option', async () => {
        await base.androidLoginAsBuyer()
        await (await UsedBikePage.buy).click()
        await (await UsedBikePage.bikeimg).click()
        await (await UsedBikePage.bikeoption).click()
        await (await UsedBikePage.searchLocation).click()
        console.log("clicked on search my location")
        await (await UsedBikePage.cityName).click()
        console.log("selected city")
        await (await UsedBikePage.nextBtn).click()
        console.log("clicked on Next button")
        await browser.pause('2000')
        expect(await UsedBikePage.selectVehicle).toBeDisplayed()
        await (await UsedBikePage.selectVehicle).click()
        await UsedBikePage.selectBikeVehicle()
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.bikeName).toBeDisplayed()
        console.log(await (await UsedBikePage.bikeName).getText())
        await (await UsedBikePage.nextBtn).click()
        await (await UsedBikePage.color).click()
        console.log("selected color")
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading4).toBeDisplayed()
        console.log("navigate to last step")
        expect(await UsedBikePage.quickyBuy).toBeDisplayed()
        console.log("How Quickly Do You Want To Buy is displayed")
        await (await UsedBikePage.duration).click()
        await (await UsedBikePage.nextBtn).click()
        await browser.pause('2000')
        await (await UsedBikePage.nextBtn).click()
        expect(await UsedBikePage.heading5).toBeDisplayed()
        console.log("last step to submit")
        expect(await UsedBikePage.submitBtn).toBeDisplayed()
        await (await UsedBikePage.submitBtn).click()
        console.log("clicked on submit")
        console.log("user able to select How quickly do you want to buy vehicle option")
       });
    

   it('TC_12 Validation for match count while requirement creation and in requirement page', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedBikePage.buy).click()
    await (await UsedBikePage.bikeimg).click()
    await (await UsedBikePage.bikeoption).click()
    await (await UsedBikePage.searchLocation).click()
    console.log("clicked on search my location")
    await (await UsedBikePage.cityName).click()
    console.log("selected city")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next button")
    await browser.pause('2000')
    expect(await UsedBikePage.selectVehicle).toBeDisplayed()
    await (await UsedBikePage.selectVehicle).click()
    await UsedBikePage.selectBikeVehicle()
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.bikeName).toBeDisplayed()
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    await (await UsedBikePage.submitBtn).click()
    expect(await UsedBikePage.reqCount).toBeDisplayed()
    console.log(await (await UsedBikePage.reqCount).getText())
    console.log("user able to see Vehicle Match count ")

});

   it('TC_13 Verify user is able to select use bike as per the Do You Wish to Exchange Your Vehicle option', async () => {
    await base.androidLoginAsBuyer()
    await (await UsedBikePage.buy).click()
    await (await UsedBikePage.bikeimg).click()
    await (await UsedBikePage.bikeoption).click()
    await (await UsedBikePage.searchLocation).click()
    console.log("clicked on search my location")
    await (await UsedBikePage.cityName).click()
    console.log("selected city")
    await (await UsedBikePage.nextBtn).click()
    console.log("clicked on Next button")
    await browser.pause('2000')
    expect(await UsedBikePage.selectVehicle).toBeDisplayed()
    await (await UsedBikePage.selectVehicle).click()
    await UsedBikePage.selectBikeVehicle()
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.bikeName).toBeDisplayed()
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    expect(await UsedBikePage.exchange).toBeDisplayed()
    console.log("Do You Wish To Exchange Your Vehicle displayed")
    await (await UsedBikePage.exchangetoggle).click()
    await UsedBikePage.exchangeBike()
    await (await UsedBikePage.nextBtn).click()
    await browser.pause('2000')
    await (await UsedBikePage.nextBtn).click()
    await (await UsedBikePage.submitBtn).click()
    console.log("user able to select exchange option")
});

});